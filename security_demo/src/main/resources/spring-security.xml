<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--<security:http pattern="/index.html" security="none"></security:http>-->
<!--    <security:http pattern="/js/js.html" security="none"></security:http>-->
    <security:http pattern="/login.html" security="none"></security:http>
    <!--1.配置需要权限访问的资源 auto-config=true 表示使用内置的登入界面和一些其他-->
    <!--开启表达式就不能写字符串了-->
    <security:http auto-config="true" use-expressions="true">
        <!--开启之后,限制跨域请求限制-->
        <security:csrf disabled="true"></security:csrf>
        <!--配置拦截的路径-->
        <!--<security:intercept-url pattern="/**" access="ROLE_ADMIN"></security:intercept-url>-->
        <!--login-processing-url指定的action-->
        <security:form-login
                login-page="/login.html"
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/login.do"
                authentication-success-forward-url="/success.html"
        />
        <!--认证通过就能访问-->
        <security:intercept-url pattern="/index.html" access="isAuthenticated()"/>
        <security:intercept-url pattern="/a.html" access="isAuthenticated()"/>

        <!--拥有add权限就可以访问b.html-->
        <security:intercept-url pattern="/b.html" access="hasAuthority('add')"/>
        <!--拥有ROLE_ADMIN角色就可以访问c.html   不写ROLE_开头会自动加-->
        <security:intercept-url pattern="/c.html" access="hasRole('ROLE_ADMIN')"/>

        <!--配置退出登入-->
        <security:logout logout-url="/logout.html" invalidate-session="true" logout-success-url="/login.html"></security:logout>
    </security:http>
    <!--2.配置认证管理器-->
    <!--<security:authentication-manager>
        <security:authentication-provider user-service-ref="MyUserDetail">
            &lt;!&ndash;<security:user-service>
                &lt;!&ndash;配置账号密码,以及该账号的角色信息  password需要声明加密方式&ndash;&gt;
                &lt;!&ndash;<security:user name="admin" authorities="ROLE_ADMIN" password="{noop}admin"></security:user>&ndash;&gt;
            </security:user-service>&ndash;&gt;
        </security:authentication-provider>
    </security:authentication-manager>-->

    <bean id="MyUserDetail" class="cn.itcast.service.impl.MyUserDetail"/>
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--配置认证管理器-->
    <security:authentication-manager>
        <!--使用自定义的认证提供者-->
        <security:authentication-provider user-service-ref="MyUserDetail">
            <!--指定密码加密码策略-->
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>


    <!--开启注解权限控制-->
    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>

    <mvc:annotation-driven></mvc:annotation-driven>
    <context:component-scan base-package="cn.itcast.controller"></context:component-scan>
</beans>